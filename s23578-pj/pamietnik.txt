04.11.2020r
Na Wykładzie ukos nauczyłem się:
- odpalać terminal,
- wyświetlać zawartość aktualnego katalogu,
- sprawdzić do katalogów względnie i bezględnie,
- tworzyć katalogi i pliki,

09.11.2020

wykonując ćwiczenia nauczyłem się:
Zad 1. 
Wraz z kolegą Jakubem Styn.
Poprzez korzystanie z różnych rodzajów operacji (tryb tekstowy, program Midnight Commander (mc)
 - [przy użyciu graficznego interfejsu użytkownika nie jesteśmy w stanie połączyć się z szuflandią]:
- nadawać i odbierać uprawnienia folderom i plikom.
zmieniać 
sprawdzić różnice między poszczególnymi uprawnieniami:
- prawo odczytu, (r)
- prawo zapisu, (w)
- prawo wykonywania, (x)
dla plików i folderów.

- łączyć się z serwerem szuflandii za pomocą protokołu ssh oraz przechodzić do katalogów pozostałych osób z grupy. (ssh snumerstudenta@szuflandia.pjwstk.edu.pl)

Zad 2.
- Usuwając sobie uprawnienia  w katalogu bieżącym pozbawiam się możliwości integracji w tym miejscu. Jednak mogę nadal wyjść z niego za pomocą "cd .."
-  W przypadku usunięcia sobie uprawnienia w katalogu nadrzędnym pozbawiam się nawet cofnięcia się do niego. W takim wypadku jedynym wyjściem jest uciec ponad nadrzędny.
W przypadku chmod możemy wykonywać polecenia tylko jeśli w danym katalogu nie odebraliśmy sobie uprawnień do zawartości.

Przykład: ścieżka: home/uprawnienia/test/test_2
Jeżeli będąc w "test_2" usunę sobie wszystkie prawa do "test_2" oraz "test" to wyjściem będzie cd ~/ścieżka bezwzględna.

Nie mając uprawnień do "test" nie można przejść bezpośrednio z "uprawnienia" do "test_2".
Zad 3.
- nauczyłem się wprowadzać treść do plików tekstowych za pomocą komendy echo.
- ">" zapisuje bądź nadpisuje treść jeśli w pliku były już jakieś treści.
- ">>" zapisuje dodając treść w kolejnej linii.
- dzięki komendzie tail -f nazwa_pliku mamy na bieżąco wyświetlane zmiany, które wykonuje inny użytkownik. 

Zad4.
- stworzyć podstawową stronę html,
- Minimalne uprawniena dla katalogu domowego jak i public_html aby odpalić stronę to: wejścia i odczytu (rx), gdy dla pliku strona.html to: odczytu (r).

Zad 5.
- poznałem komendę umask dzieki której mam możliwość zmiany domyślnych uprawnień dla katalogów i plików (ułatwa to pracę podczas tworzenia dużego drzewa). Podstawowy umask wynosi 022.
- Operacja logiczna wykonywana na domyślnych prawach dostępu oraz maski wygląda następująco:
	Od domyśłnych ustawień praw dostępu odejmuje wartość umask.
Przykład 1:
	wartość umask wynosi: 777 
	działanie: tworząc katalog "kat1" następuje operacja odjęcia podstawowych uprawnień katalogu od umask, czyli:
	777
       -777
	===
	000
	Wynik: Utworzony katalog przyjmie uprawnienia równe: 000.
Przykład 2
	wartość umask wynosi: 000
	działanie: tworząc katalog "kat1" następuje operacja odjęcia podstawowych uprawnień katalogu od umask, czyli:
	777
       -000
	===
	777
	Wynik: Utworzony katalog przyjmie uprawnienia równe: 777.

24.11.2020r
przerabiając materiał ze zjazdu 3 poznałem:

- komende grep, która służy do wyszukiwania nazwy pliku pasującego do wzroca,
- znaczenie "|" (potok "pipe) ">" ">>" "2>>" "A|B" "A<B"
- Polecenie grep (filtracja wierszy),
- poznałem komende ps z parametrami (-a, x, aux) służącymi do wyświetlania listy procesów
- wyświelać wszystkie procesy z danego typu/gatunku (np bash, root, txt, etc)
- sprawdzać jaki PID ma dany proces,
- komendy kill i jej zastosowania,
- komenda kill nie zawsze zadziała (np w przypadku gdy chcemy usunąć proces należcy do root będąc - zwykłym użytkownikiem - chodzi o uprawnienia :)
- różnice między Ctrl+C a Ctrl+D (zakończenie procesu a wstrzymanie (zakończenie strumienia)
- znak zapytania "?" oznacza nie przypisanie konkretnego procesu do konkretnej powłoki/terminala (TTY)
- użycie bg (przełączenie programu w tle) /fg (powrócenie, wznowienie procesu)

13.02.2021

Przerabiając materiał ze zjazdu 7 oraz 8 poznałem.
Program PowerShell oraz PowerShell ISE
Zaznajomiłem się ze strukturą pisania komend wraz z funkcjami i aliasami.
główne aliasy to:
? - skrót Where-Object
% - skrót While-Object
Dzięki PS mogę podobnie jak w konsoli pracować na plikach.
PS używa poleceń cmdlet - samodzielne obiekty programistyczne.
Oraz:
poznałem:
- komendę Set-ExecutionPolicy Bypass, dzięki której mogę korzystać z obszerniejszej zawartości komend i ogólnego dostępu do powłoki.
- Wyświetlać moduły,
- Filtrować komendy za pomocą aliasów oddzielonych potokami "|"
- Listowania oraz wypisywania wyników do pliku.
- Pobierania zawartości dzięki zainstalowanemu modułowi BitsTransfer.
- Mierzenia czasu wykonywania jakiegoś polecenia, dzięki komendzie Measure-Command.
- Przeglądanie Rejestru oraz sprawdzenie dysków i ich informacji. Get-PSDrive.

Alias - Lista wszystkich zdefiniowanych aliastów w  bieżącej sesji jak: ?, ls, dir, %
Cert - Magazyn certyfikatów TLS/SSL
Env - zmienne środowiskowe w bierzącej sesji.
Można też normalnie doinstalować dyski:
GH - GitHub
AD -ActiveDirectory

W trakcie wykonywania poleceń odkryłem, że PS nie służy tylko do pisania skryptów ale to również konsola w której można odpalać różne programy. (dzięki "call")